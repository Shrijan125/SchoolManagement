import type { Metadata } from 'next';
import { Geist, Geist_Mono } from 'next/font/google';
import './globals.css';
import admin from 'firebase-admin';
import { ThemeProvider } from '@/components/theme-provider';
import NextSessionProvider from '@/providers/session-provider';
import { getServerSession } from 'next-auth';
import { authOptions } from '@/lib/auth';
import serviceAccount from '../../avg-notifications-firebase-adminsdk-yw6xe-98449560d9.json';
import { Toaster } from '@/components/ui/toaster';

const geistSans = Geist({
  variable: '--font-geist-sans',
  subsets: ['latin'],
});

const geistMono = Geist_Mono({
  variable: '--font-geist-mono',
  subsets: ['latin'],
});

export const metadata: Metadata = {
  title: 'Create Next App',
  description: 'Generated by create next app',
};

export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const session = await getServerSession(authOptions);
  if (!admin.apps.length) {
    admin.initializeApp({
      credential: admin.credential.cert(serviceAccount as admin.ServiceAccount),
    });
  }
  return (
    <html lang="en" suppressHydrationWarning>
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        <ThemeProvider
          attribute={'class'}
          defaultTheme="dark"
          disableTransitionOnChange
        >
          <NextSessionProvider session={session}>
            {children}
          </NextSessionProvider>
        </ThemeProvider>
        <Toaster></Toaster>
      </body>
    </html>
  );
}
