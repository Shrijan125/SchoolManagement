// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model Teacher {
  id         String   @id @default(uuid())
  fullname   String
  password   String
  email      String   @unique
  subjectId  String
  grade      Grade[]
  subject    Subject  @relation(fields: [subjectId], references: [id])
  role       Role     @default(TEACHER)
}

model Student {
  admno      String    @id
  fullname   String
  serialno   String
  grade      Grade
  section    Section
  category   Category
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt

  results    Result[]
}

model Subject {
  id         String    @id @default(uuid())
  name       String
  category   Category
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt

  teacher    Teacher[]
  results    Result[]
}

model Exam {
  id         String    @id @default(uuid())
  name       String
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt

  results    Result[]
}

model Result {
  id         String    @id @default(uuid())
  marks      Float
  studentId  String
  student    Student   @relation(fields: [studentId], references: [admno])
  subjectId  String
  subject    Subject   @relation(fields: [subjectId], references: [id])
  examId     String
  exam       Exam      @relation(fields: [examId], references: [id])
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
}

enum Role {
  ADMIN
  TEACHER
}

enum Category {
  KIDS
  JUNIORS
  SENIOR
}

enum Grade {
  KG1
  KG2
  I
  II
  III
  IV
  V
  VI
  VII
  VIII
  IX
  X
  XI
  XII
}

enum Section {
  A
  B
}
